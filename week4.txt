Day2 : 15th April 2019

- python lib called OS is used to make folder and file handling related operations,

- matplotlib.image is used for image related operations


Day3: 16th April 2019

Canny Edge Detection algorithm
- edges = cv2.Canny(gray, low_threshold, high_threshold)
The John Canny recommended low_threshold to high_threshold ratio to be 1:2, 1:3


Hough Transformation: 
- a line in image space corresponds to a point in Hough space, A point in image space describes a line in Hough space

- Two points in image space correspond to two lines in Hough Space. Not only that, but these lines must intersect

we have two intersecting lines in Hough Space. How would you represent their intersection at the point (m0, b0) in image space?
- The intersection point at (m0, b0) represents the line y = m0x + b0 in image space and it must be the line that passes through both points!

lines=cv2.HoughLinesP(masked_edges, rho, theta, threshold, np.array([]),min_line_length,max_line_gap)

Day4: 23rd April 2019

Camera don't create perfect images some of the part at the edge gets stratched or schewed.

Why is it important to correct for image distortion?
1. Distortion can change the apparent size of an object in an image.
2. Distortion can change the apparent shape of an object in an image.
3. Distortion can cause an object's appearance to change depending on where it is in the field of view.
4. Distortion can make objects appear closer or farther away than they actually are.

Types of Distortion in the camera:
  1. Radial Distortion 
  2. Tangential Distortion
  
Chessboard can be used to calibrate camera image to make it undistorted.

cv2.findChessboardCorners() :  The function attempts to determine whether the input image is a view of the chessboard pattern and locate the internal chessboard corners. The function returns a non-zero value if all of the corners are found and they are placed in a certain order (row by row, left to right in every row). Otherwise, if the function fails to find all the corners or reorder them, it returns 0.
ret, corners = cv2.findChessboardCorners(gray, (8,6), None)

cv2.drawChessboardCorners() : The function draws individual chessboard corners detected either as red circles if the board was not found, or as colored corners connected with lines if the board was found.
img = cv2.drawChessboardCorners(img, (8,6), corners, ret)

cv2.calibrateCamera() : It returns the camera matrix, distortion coefficients, rotation and translation vectors etc
ret, mtx, dist, rvecs, tvecs = cv2.calibrateCamera(objpoints, imgpoints, gray.shape[::-1],None,None)

cv2.undistort() : dst = cv2.undistort(img, mtx, dist, None, mtx)
